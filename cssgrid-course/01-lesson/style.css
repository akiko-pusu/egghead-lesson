:root {
  --yellow: #ffc600;
  --black: #000000;
  --gray: #DADEDF;
  --darkgray: #7F7F7F;
}

html {
  /* border-box: add border and padding without increasing box-size */
  /*
    Ref. https://developer.mozilla.org/ja/docs/Web/CSS/box-sizing
    border-box は、境界およびパディングを、要素に指定した width および height の中で取るようブラウザーに指示します。
    煽れなくて済む！
  */
  box-sizing: border-box;
  font-family: Tahoma;
  color: var(--black);
}

/* inherit box-sizing from .html */
/*
  html で規定した border-box を継承します。便利！
  ここでは、余白、ボーダーは0です
*/
*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--gray);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 5px 0;
}

p {
  font-size: 15px;
  margin: 5px;
}

.container {
  padding: 10px;
  /*
    grid は　行＆列を持ちます
    grid の宣言後、テンプレートとしてcolumn & row を定義します
    Ref.https://developer.mozilla.org/ja/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout
  */
  display: grid;

  /* ヘッダ、コンテント、フッタの構成にする */
  /* 1列　*/
  grid-template-columns: 1fr;

  /* 各行の高さを1、5、1に */
  grid-template-rows: 1fr 2fr 3fr 1fr;

  /*
    各グリッドにラベルを設定できる
    上記の通り3行にわけたグリッドに対して対応する名前を設定
    https://developer.mozilla.org/ja/docs/Web/CSS/grid-template-areas
    grid-template-areas CSS プロパティは、名前付きの グリッド領域 を指定します。
    同じ名前（ラベル）のfr のグリッドは連結させます。
  */
  grid-template-areas:
  "header"
  "content"
  "portfolio"
  "footer";

  column-gap: 10px;
  row-gap: 20px;
}

.item {
  border: 5px solid var(--black);
}

.header {
  grid-area: header;
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 1fr;
  grid-gap: 10px;
  padding: 10px;
  align-items: center;
}

.nav {
  grid-area: nav;
}

.content {
  /* さらにグリッドを設定して、アラインメントを調整します */
  grid-area: content;
  display: grid;
  align-items: center;
}

.portfolio {
  grid-area: portfolio;
  display: grid;

  /* 1fr, 2fr の組み合わせを、2回りピート　*/
  grid-template-columns: repeat(2, 1fr 2fr);
  grid-gap: 10px;
  padding: 10px;
}

.footer {
  grid-area: footer;
  display: grid;
  justify-items: end; /* アイテムは右端に */
  align-items: center; /* 縦の位置は中央に */
}
